{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8d394B1A3aa77121879fc81f509e360dad371A65",
      "txHash": "0x23dfe441e11e989aa6f9dfbc2c139fc171f2362444903770d18e202a4fd0e76e",
      "kind": "uups"
    },
    {
      "address": "0x82fE581F39B1701b6E7Bd0247AFD2aF08ce04c40",
      "txHash": "0x707407d719acfe1233111226c73bf17130bb9b1a7338e1130d193f42585be26d",
      "kind": "uups"
    },
    {
      "address": "0x00AcCA0E565b11749d5316512135D75bf9e971bd",
      "txHash": "0x90ec2e66120f1f828a8b88bd6f026f3b36c9fcca0c874eb821b06d9a4a3a7acf",
      "kind": "uups"
    }
  ],
  "impls": {
    "3101c2a6fb02c3be569fe9c35e876dbd1599e3307d6f00c282051dc02fc725c5": {
      "address": "0xbd1ecFC0b016d399b1C8CEf6AaAF9787e91F4128",
      "txHash": "0xe3b7b2194420e48117a9125dc95f3d4ee515fb40b5bde772b72df42a1004627e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "nextEscrowId",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "KustodiaEscrow2_0Pausable",
            "src": "contracts\\KustodiaEscrow2_0Pausable.sol:38"
          },
          {
            "label": "escrows",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Escrow)7995_storage)",
            "contract": "KustodiaEscrow2_0Pausable",
            "src": "contracts\\KustodiaEscrow2_0Pausable.sol:39"
          },
          {
            "label": "bridgeWallet",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "KustodiaEscrow2_0Pausable",
            "src": "contracts\\KustodiaEscrow2_0Pausable.sol:42"
          },
          {
            "label": "platformWallet",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "KustodiaEscrow2_0Pausable",
            "src": "contracts\\KustodiaEscrow2_0Pausable.sol:43"
          },
          {
            "label": "pausers",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "KustodiaEscrow2_0Pausable",
            "src": "contracts\\KustodiaEscrow2_0Pausable.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(EscrowStatus)7975": {
            "label": "enum KustodiaEscrow2_0Pausable.EscrowStatus",
            "members": [
              "Pending",
              "Funded",
              "Released",
              "Disputed",
              "Cancelled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Escrow)7995_storage)": {
            "label": "mapping(uint256 => struct KustodiaEscrow2_0Pausable.Escrow)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Escrow)7995_storage": {
            "label": "struct KustodiaEscrow2_0Pausable.Escrow",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "payee",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vertical",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "clabe",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(EscrowStatus)7975",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "conditions",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a002aeda6c8886038b024dd57ebf131debccbb46b4a49e2b41d9a802042ac262": {
      "address": "0xfB859B74E895C4aA9E9940F9AC3bbfD5EF5c3328",
      "txHash": "0x2a99f9dc45d36191d4d6583b2747107cccc65d696be37f954b2c5695bf7f9036",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "451",
            "type": "t_struct(Counter)4350_storage",
            "contract": "UniversalAssetNFTCompact",
            "src": "contracts\\UniversalAssetNFTCompact.sol:37"
          },
          {
            "label": "assets",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(Asset)5126_storage)",
            "contract": "UniversalAssetNFTCompact",
            "src": "contracts\\UniversalAssetNFTCompact.sol:40"
          },
          {
            "label": "assetHistory",
            "offset": 0,
            "slot": "453",
            "type": "t_mapping(t_uint256,t_array(t_struct(AssetEvent)5145_storage)dyn_storage)",
            "contract": "UniversalAssetNFTCompact",
            "src": "contracts\\UniversalAssetNFTCompact.sol:41"
          },
          {
            "label": "assetIdToTokenId",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "UniversalAssetNFTCompact",
            "src": "contracts\\UniversalAssetNFTCompact.sol:42"
          },
          {
            "label": "ownerAssets",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "UniversalAssetNFTCompact",
            "src": "contracts\\UniversalAssetNFTCompact.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetEvent)5145_storage)dyn_storage": {
            "label": "struct AssetManagementLib.AssetEvent[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(AssetType)5093": {
            "label": "enum AssetManagementLib.AssetType",
            "members": [
              "VEHICLE",
              "PROPERTY",
              "MACHINERY",
              "LUXURY_GOODS",
              "ELECTRONICS",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(EventType)5106": {
            "label": "enum AssetManagementLib.EventType",
            "members": [
              "CREATION",
              "TRANSFER",
              "VERIFICATION",
              "MAINTENANCE",
              "INSPECTION",
              "DAMAGE",
              "REPAIR",
              "SALE",
              "PURCHASE",
              "INSURANCE",
              "LEGAL",
              "CUSTOM"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(AssetEvent)5145_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AssetManagementLib.AssetEvent[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Asset)5126_storage)": {
            "label": "mapping(uint256 => struct AssetManagementLib.Asset)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)5126_storage": {
            "label": "struct AssetManagementLib.Asset",
            "members": [
              {
                "label": "assetId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType",
                "type": "t_enum(AssetType)5093",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "currentOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "creationDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isVerified",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "metadata",
                "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(AssetEvent)5145_storage": {
            "label": "struct AssetManagementLib.AssetEvent",
            "members": [
              {
                "label": "eventType",
                "type": "t_enum(EventType)5106",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "authorizedBy",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "transactionAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "supportingDocs",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "customFields",
                "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Counter)4350_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
