{"_id":"brotli-wasm","_rev":"10-b7fa9414346263a67b4e6e0afc44da21","name":"brotli-wasm","dist-tags":{"latest":"3.0.1"},"versions":{"1.0.0":{"name":"brotli-wasm","version":"1.0.0","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","main":"./pkg.node/brotli_wasm.js","types":"./pkg.node/brotli_wasm.d.ts","browser":"./index.browser.js","sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:browser","test:node":"TS_NODE_FILES=true mocha -r ts-node/register 'test/**/*.spec.ts'","test:browser":"karma start","test:browser:debug":"npm run test:browser -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","ts-loader":"^9.2.1","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.9.1","webpack":"^5.37.1"},"gitHead":"af42f49c65abef2acf857cf1efac1aa29d12c5ee","_id":"brotli-wasm@1.0.0","_nodeVersion":"14.6.0","_npmVersion":"6.14.6","dist":{"integrity":"sha512-CHl5wa2oYS7yvCL3ojyFeGbhgK6hLZTJ2E5J/ltRT5yiF2CwG0/P8EkLzKp+eqPJT1EPcCZPSu3H2FfpSObH7A==","shasum":"3f53bf9e08d1cb1da3ffb910ceee989760a491e3","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-1.0.0.tgz","fileCount":13,"unpackedSize":2778166,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgq6eSCRA9TVsSAnZWagAAtDUP/0bculAzuhohK7QO63yf\nIGWg7asyvAh31+l/U9scbLpeoFEdtXFoBlIoXzRfziTw8gsGHHTzQtbqs33i\nnanoOEeWy1NFrhehBiOTd3DIorkALmyYlMTcLBkKH6gOwzGey/+t+Th3y2FO\nKGb29z8uYFudQxyAXIPLmBKkDNu0T49pWsVbH1ZEAawAppRBp44TEpc/n3Zn\n/n7/dejCul49TeUoB4PTij7F/lg3SnJfcOh9yhJnfuzFqA9/VsHZlRnIf15v\nLt8jENpKf19Bbr7COlreL0CsPrsZegIqNedE31FHAn271T1LnPAJojcXxlgv\n0+djjfAjCgfF0CANGtMpFG6JUqMW59yJaIMyAWxKWF5HAaI53DZdesiBTyJW\n+qMbnguovlKzW8CX5XEA/3UHmFdLdBR0N3iNJqYYHgEH3dcJKzLojNwmi8gO\nOIXUKigooqmqwR6lYxKiHbDx8Q0yOUY7FJk7OSFF7qZE1vTkINQfFqHLtqhb\nY5gGm31PP5xJzblVqEB6+ttTZ4y47a29s4pGXWqpYF5fy3QmmvrhRM3NMwOy\neR452piGwe0eorPN0tNWRsendsCMdoLPYuKpDkx6gcOZnQsC9TH9fqk5CpsF\nmfttg8YQBxebQuKC3uykE2enM2oXGYRdaUey3Ky2PYE1h87N6T5jR5zvGW1Q\nCWJY\r\n=wA/4\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICl95vzLYY+vnD/C9853c7vh9tzHieLeDd5bpuF2yUXlAiB1KJeKdolByNwjzE28p5PhZ3ey6RjsZq9Ax2ABrsVnzA=="}]},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_1.0.0_1621862289744_0.1629880754540638"},"_hasShrinkwrap":false},"1.1.0":{"name":"brotli-wasm","version":"1.1.0","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","main":"./pkg.node/brotli_wasm.js","types":"./pkg.node/brotli_wasm.d.ts","browser":"./index.browser.js","sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:browser","test:node":"TS_NODE_FILES=true mocha -r ts-node/register 'test/**/*.spec.ts'","test:browser":"karma start","test:browser:debug":"npm run test:browser -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","ts-loader":"^9.2.1","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.9.1","webpack":"^5.37.1"},"gitHead":"8e990d342f5374bcaeeed85f5e8e3dec18cca308","_id":"brotli-wasm@1.1.0","_nodeVersion":"14.17.0","_npmVersion":"6.14.13","dist":{"integrity":"sha512-p2tLxAMtT6a4jXSeDMDSey9sdwc6yds1AY7MKEsMqp9PbMl6n9ey8VUjrfSAvX+k7AW3R+pVKoo0P1i/+19upA==","shasum":"f6181d4831107294cbf74fcbf3c81469fd97ca36","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-1.1.0.tgz","fileCount":13,"unpackedSize":2871637,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg9ZMNCRA9TVsSAnZWagAACsEP+gPFcVXe4JFgu4xTx547\nQXawFqrDcr/mVx1ZY6W25eGQ9byWgIFvehaQ3+6gcVnRP/E+v9xt/KcWoyKg\nOSwofl/Uj/metWHAA1xc+o4SgH4DIiqxmOuZzAG0vLEhX0i7Yp3bKCMWdYSJ\naOJMComtm0o5eiMaC4yYH4p9SnRSx2TZ3OyeNQbaQVqxnRU0BeKSlqs7VrKy\nNaT2hmC5koahl9jfZyyRsiBXim9kq1gwipVxxK+NZnVr9O+Ct+7+RUt3EUHo\nOJwV/uqysw5iCK1YwLgjkPGznvBusIkqReBURMwEWjEzjA/wjQsQI3yU2iAZ\njXQ6heJAO/JrBqPw1o+tcSexEvMYmYWTCFckA0kgqibi0mAQqy+xAtca765H\nxdw1RiImlQLjtGjNFr/3CPsCE1U6KPKMevu2nmf/psuKi4bdS5VVMOh8d3n9\nftG34TokK4w7AaRu2Ja6sHJV4abUQXNI6MJkAMSel38Mw91SBBoUswo85lQx\nBrZX3KgcauW/JhNOZwhJDrl4/Pu6MvmG2dtE9v5QX2DC131SnhKFA0ctbzXD\nnruD4xWZYnOcvSoZlgpJaNOZbjIHrlsaWf0/cGuqG50F3J0DAdNnBgvO0BNk\nwvuHIWj/gtL5kZbwfzhKNOXELTjlgsFP8sQy0eqmznrMKYqWeBu8hVLsrtDI\nWZ1B\r\n=LhBE\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCyHgXtYpBkyipXq26lwtm7c07xwBFi83UXpYfbqAcdRgIhAL7KdJ+PeyDkozajNLMyY0KXUGrNM3YTgQ2IkZezh9+f"}]},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_1.1.0_1626706701523_0.3931119451546994"},"_hasShrinkwrap":false},"1.1.1":{"name":"brotli-wasm","version":"1.1.1","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","main":"./pkg.node/brotli_wasm.js","types":"./pkg.node/brotli_wasm.d.ts","browser":"./index.browser.js","sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:browser","test:node":"TS_NODE_FILES=true mocha -r ts-node/register 'test/**/*.spec.ts'","test:browser":"karma start","test:browser:debug":"npm run test:browser -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","ts-loader":"^9.2.1","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.9.1","webpack":"^5.37.1"},"gitHead":"e29f0ad8c855c42268f554cb4c9530da8caf5d75","_id":"brotli-wasm@1.1.1","_nodeVersion":"14.18.3","_npmVersion":"8.5.2","dist":{"integrity":"sha512-zLBVqKWwuVpbpBSchcScbRLN0nZKL5pG6lYNire1+e7gok/jqHgJY1zdeHUWHTRkpYtWxHcjy6DeF5oeYQ1avA==","shasum":"d47a995224719f1a3b9364ad32016f48ef9de62e","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-1.1.1.tgz","fileCount":13,"unpackedSize":2829547,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIF1D77FJhIN6AOB9GJqkKpEk1YdRloaTJkV3eVjLaM/MAiBfxmq6eOPFlXGB5sM6TvYOa1/kE2CPrprDYp541Ori3g=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJian1PACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoxQBAAm2exA/3PBzi/4tX5cyiYQBbvMn2N+mFRHIBecbagFmATGuGJ\r\nCLj/T9N5zasw/mTsdHh7RhkN/3tf5A78zSGWVxJS2UZD4116NpJ+DIpImG65\r\nL1ubEOf6xuKZ0AWSTH5gOzVfkeJTD5Kwe+l0HzLl8mctnZTe/OWfY8PqYbPu\r\n7hItG48bwwaznGvOds3jtF9BQL+/jxP5AG5oTjOI96VVgjmlGQiNOOOUa3V+\r\n7pRqsI0cNtsOzuNAdScIlinutfrQS4W5ZrneNQAzW/xtqWEnXGqEgVlgZWWb\r\nYP+dkTaodxAmdrSZ3/kuM30aZkOkJk1ALcbp2ejLxWOQ1vjY+SHEUAsZMrOJ\r\nrmGDnw98dlI0WO8HiQv3OjwhnLzXBVDiC4lFSoVf77IlwVhNfkuKmvhdSXOE\r\nsBe4zf++j8NnIYFBAqpfKhzOLoggjs7Gkje+skxbkUsC6PwmqpKtqBzuaiRH\r\niHRh4cKSYORK1IkhaTyHaQi6XODlpBdMbKyMqbN/TDJXAHx0UtnpKy66+r+W\r\nTtDCXlem2BbRhQrGdBTflgwPplLoC7le4Zn3QSJvuGU/vPONAI8oE4vPNlKK\r\n39enxlUhfrmzY/ImAGybHhyuaaARGeYOROenso/u68gUt3DhAahKKBWS7qFx\r\nNsOoqjO3D2PiY183ZRDGkH1MuTGrabQ6iUs=\r\n=a5bp\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_1.1.1_1651146063094_0.6047476471177768"},"_hasShrinkwrap":false},"1.2.0":{"name":"brotli-wasm","version":"1.2.0","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","main":"./pkg.node/brotli_wasm.js","types":"./pkg.node/brotli_wasm.d.ts","browser":"./index.browser.js","sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:browser","test:node":"TS_NODE_FILES=true mocha -r ts-node/register 'test/**/*.spec.ts'","test:browser":"karma start","test:browser:debug":"npm run test:browser -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","ts-loader":"^9.2.1","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.9.1","webpack":"^5.37.1"},"gitHead":"e85565ad64a64c04c4c6487214d2996883adbf3f","_id":"brotli-wasm@1.2.0","_nodeVersion":"14.18.3","_npmVersion":"8.5.2","dist":{"integrity":"sha512-PdDi7awF36zFujZyFJb9UNrP1l+If7iCgXhLKE1SpwqFQSK2yc7w2dysOmME7p325yQaZNvae7ruzypB3YhFxA==","shasum":"0f99b97b0020c8152308c277388aecf2a06b6e32","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-1.2.0.tgz","fileCount":13,"unpackedSize":2852612,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCuk1ofo18+5PMl8qV4EXDj52OUA3ib92vCE0BFWzCg0gIhAPBsT+f/y2lwI4K6H3IMB7JMezlmzgZ+Q+18G0TzES9k"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifUxJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpy9Q/+N64J3nFFNoJAebTGavq3S82G+M61aJVRMTtQ+Ld8W194rioQ\r\nao8/1R27jAF89Mr2NRxf1tc1wOmj7ZXw++UTBZBLhtNlPkC9ZuocezDwDOQy\r\nD5ufdjaY/3lsFnkyTO5KttL2rWkZpSNJvJpNe7ACepTFveV9kFZTn/yJru00\r\nZbcQQaN8tdY3q7wuqteeqwxruNVCYSx6K8X6XqxoTcGcFVWhA3ZodQrIXFGn\r\nSRU+7znFm5WOoBcHtsqBSIEFvJczvPr8hM19+LU1/8px48MiSguVv54dyDQN\r\nPGORt4GxQlU4ieKKo5UCy0O7IokyLAAVoqwSX5uGEYr6ZAIpEy8eOOvCZOKM\r\nphbANuC9h2eCQQhRJJ0ALTueOLGQjTPuxnpuWwqi7LqK+5zDmEChkd0n3RDW\r\nZ5dYjDgV+JIh39m/8rro9QjkHWAtBLgZW2TBfcpPFtFXjcyVLDjYPvyDNGLR\r\nzdV7LrbtsqfBwR9ByUrmwmYzFXpQVsEi1GNTGT4ZdJf7KHunC6/CjcptXhE7\r\nxUpRXY2PC5JuFyNZJsaT3RwmI0K2RJhGsu8iL46wRS6gNoXBcT/sKzPE/lso\r\n2SOX8uIm2shZjm/W5UzHp8Nz7mFpstaa0ER1D3Yj8HYSoZw0c/P0qXCKcIeN\r\nzKrZMx3oI/hK6/J5/gjRleTraNPLT1mWiOs=\r\n=W79B\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_1.2.0_1652378697420_0.9393305220591641"},"_hasShrinkwrap":false},"1.3.0":{"name":"brotli-wasm","version":"1.3.0","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","types":"./index.d.ts","main":"./index.node.js","browser":"./index.browser.js","exports":{".":{"import":"./index.web.js","browser":"./index.browser.js","require":"./index.node.js","default":"./index.web.js"}},"sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:esm && npm run test:webpack","test:node":"ts-mocha -p test/tsconfig.json 'test/**/*.spec.ts'","test:webpack":"karma start ./karma-webpack.conf.js","test:esm":"karma start ./karma-esm.conf.js","test:webpack:debug":"npm run test:webpack -- --single-run=false --browsers Chrome","test:esm:debug":"npm run test:esm -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@peculiar/webcrypto":"^1.4.0","@types/atob":"^2.1.2","@types/btoa":"^1.2.3","@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","@types/text-encoding":"0.0.36","atob":"^2.1.2","btoa":"^1.2.1","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-vite":"^1.0.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","text-encoding":"^0.7.0","ts-loader":"^9.2.1","ts-mocha":"^10.0.0","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.10.3","webpack":"^5.37.1"},"gitHead":"47542a2d76bf87ce721fcceefe046b81b352c6e0","_id":"brotli-wasm@1.3.0","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-UnkbbzX4/eYPzxUUAnIb3MVU477fY/ZXAwRBLQXjnikNFILSoIYtCPjC9CJKdndSpjFKhsYNYS6xRWyuarkyRQ==","shasum":"4a71991b42a0e0a353d8defcb780a9e5366a76a4","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-1.3.0.tgz","fileCount":20,"unpackedSize":4281471,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHV4BUa8ftbxaopEQ3ld//oEkloUMQOSu9xZegCBJ4YWAiAGhvQQLugfHAsI0EGxIW/SymIUjTo1MK4r9Qet3hsI0g=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi9SteACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqpXQ//UiQJaph8zIsbcpLQ7Onr7hGDchm1zbcoselAMjktBa1roZOD\r\ntLwIDwyun1tMt9PgGlZH0mFESr3ZcuOqaiLx626kfxPBBRMjOh54Pwkw453n\r\n8oWpgEVf6dqiy23CZtNgWLNdV75BTPCjqJy/xg9b0ahTB4Uv66/F52rA4igg\r\nbhLzIjNJW+BtW2STT7a6bWA/v9RgTRjCyXmHa1M/+v6fa7U1s3FD23BZjUPn\r\nMhEmicOvCYEOWRc62wVkb8rP7Y3u2gFyhfI5DpMkKZYtAh7o/MMdEFW7eCOF\r\n4SaFAVa6Nunq8D/4TGia7CA+0VrANh6BWKj5PrgeC7RTXdoXSS6eh1BhAdBC\r\nT25MrjkBa6Xh1H90MUp8HpuXlvJXB1hyhBR8EQZt6V7mOoddLZOKUL2D2Ek7\r\n7BXiYYYWpxVdm/e8i6yo3MzMczEkoGK3ZqPwgJpmtZvDfC2vOb/BXhjOQOZc\r\nO7eWC1FlCSfrz5pVulbmKoQeE1Aw6ZKmdm9PyFRuaOphquADSSfjJYSeIUPz\r\nUYTAyZ7o8+7kAVU5zMumAdYUet8+AKxeodMO0U8vNXDxrpEddDvmnEoArdJc\r\nY9ZPBld0LHev3neQfszkjRPor7rM+2mnYTNDC2peWKKZuBfie68cgkx+5cvE\r\ndfQzkJHECvZK+cVBIBlgbka3Sp61ofVgAYY=\r\n=zEz9\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_1.3.0_1660234590610_0.04664654334045171"},"_hasShrinkwrap":false},"1.3.1":{"name":"brotli-wasm","version":"1.3.1","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","types":"./index.d.ts","main":"./index.node.js","browser":"./index.browser.js","exports":{".":{"import":"./index.web.js","browser":"./index.browser.js","require":"./index.node.js","default":"./index.web.js"}},"sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:esm && npm run test:webpack","test:node":"ts-mocha -p test/tsconfig.json 'test/**/*.spec.ts'","test:webpack":"karma start ./karma-webpack.conf.js","test:esm":"karma start ./karma-esm.conf.js","test:webpack:debug":"npm run test:webpack -- --single-run=false --browsers Chrome","test:esm:debug":"npm run test:esm -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@peculiar/webcrypto":"^1.4.0","@types/atob":"^2.1.2","@types/btoa":"^1.2.3","@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","@types/text-encoding":"0.0.36","atob":"^2.1.2","btoa":"^1.2.1","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-vite":"^1.0.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","text-encoding":"^0.7.0","ts-loader":"^9.2.1","ts-mocha":"^10.0.0","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.10.3","webpack":"^5.37.1"},"gitHead":"2ecde28bc3d745b394b20308fe99bec6f9117b68","_id":"brotli-wasm@1.3.1","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Vp+v3QXddvy39Ycbmvd3/Y1kUvKhwtnprzeABcKWN4jmyg6W3W5MhGPCfXBMHeSQnizgpV59iWmkSRp7ykOnDQ==","shasum":"51deb0a17a146b36fe10cbc99cd4f92d9ce166d7","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-1.3.1.tgz","fileCount":20,"unpackedSize":4289988,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDnYLWCARNmPiB5jnsw+vm2L6VNRBruFO7AkzoTW+i9HAIhAKKfqCWt9nrM6WwPEgzsRX5UClW2Xxx5mqP1Oi1SO9re"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWRPjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmop5Q//QR+pymkVN4BKN59MmP2248FXxjj3oOKAiYAfA477hTSDspTm\r\n7640gpsyjrimFSM6g9ywHKG2fq6wk4SscooQHYWkTkzVAc/jLfmuGDgZQ4td\r\nrSZDC3iTBOX7/kQI/mW+y91mMrlttI4rImlJ8V3yMb0gXebGbbE0Vi78cF85\r\nXXNCb309RBkGUCgpbqy4wvwSV237g3kErESAtxGXhfaxHHtTBImLGDOa0pHF\r\n3YuSQ4lZXbHIrpdD0VhKTuycQc/45ptiEuhSjCxkMptx5mVlQ+R4a7FyfX7N\r\nl2ovxRWYnnaCYZqm7K2ZvMN6iOT+zXAJ+JoDh8CrfhH/HLhzHIyVXUT77oJk\r\nebEmMIsAU7oCsNnx8PX9smCDIItYy5uLcyxeTaZZgKqLF6DDDjbHohVLN+kj\r\n6Vm/CSal6k4yaoPDrYOP+5OzOk57ngJ/r0y+udAYtyXzcnvhjqUWLoyKdPkQ\r\n8jk5BUm0Y7hGMHrDsAen1Gn7Yh658ji4OOIL/lY9r3QzUaK5aEhtqKFS+lrg\r\nRkhtjDolOOEONAgmXcv3YXv0YIwjr+FLzlQoaDiRCjQpO7tI5r9jrrROOWUB\r\nbZplA/xhUwZMyUa4A+5lsZ7eKW1pIb6KKzXHQQIk9e8NmYPHmsZqbXXXarVC\r\nxSxQ9b1qZIbfv9Jw5qeTy5pDgjVm9rH4cA4=\r\n=3dmD\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_1.3.1_1666782179170_0.580810095722549"},"_hasShrinkwrap":false},"2.0.0":{"name":"brotli-wasm","version":"2.0.0","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","types":"./index.d.ts","main":"./index.node.js","browser":"./index.browser.js","exports":{".":{"import":"./index.web.js","browser":"./index.browser.js","require":"./index.node.js","default":"./index.web.js"}},"sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:esm && npm run test:webpack","test:node":"ts-mocha -p test/tsconfig.json 'test/**/*.spec.ts'","test:webpack":"karma start ./karma-webpack.conf.js","test:esm":"karma start ./karma-esm.conf.js","test:webpack:debug":"npm run test:webpack -- --single-run=false --browsers Chrome","test:esm:debug":"npm run test:esm -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@peculiar/webcrypto":"^1.4.0","@types/atob":"^2.1.2","@types/btoa":"^1.2.3","@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","@types/text-encoding":"0.0.36","atob":"^2.1.2","btoa":"^1.2.1","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-vite":"^1.0.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","text-encoding":"^0.7.0","ts-loader":"^9.2.1","ts-mocha":"^10.0.0","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.10.3","webpack":"^5.37.1"},"gitHead":"e1a6e5abb071ac3e1e338a04b2841259600543ec","_id":"brotli-wasm@2.0.0","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-YUHdYf6+0VWZ08jFSbTylJ0uT0444E56XrrQI1UPTET0y8YUt6yRRkQGMzzrKpTnzOC/SmHhhvOn7fPpeNPoWQ==","shasum":"7b7a58778503ea679cdfabd5d98da5f41f8a6e16","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-2.0.0.tgz","fileCount":20,"unpackedSize":4238408,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIACQ6pZLEu0hYIcD9aAX+t6BYIdniDtOWPMp5b0lJ0PsAiEAv8w4PgTcpq4WpTBRS8Y1Xz2ZW/8b6nzmr691xoCTXa4="}]},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_2.0.0_1689179184237_0.3456146672617326"},"_hasShrinkwrap":false},"2.0.1":{"name":"brotli-wasm","version":"2.0.1","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","types":"./index.d.ts","main":"./index.node.js","browser":"./index.browser.js","exports":{".":{"types":"./index.d.ts","import":"./index.web.js","browser":"./index.browser.js","require":"./index.node.js","default":"./index.web.js"}},"sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:esm && npm run test:webpack","test:node":"ts-mocha -p test/tsconfig.json 'test/**/*.spec.ts'","test:webpack":"karma start ./karma-webpack.conf.js","test:esm":"karma start ./karma-esm.conf.js","test:webpack:debug":"npm run test:webpack -- --single-run=false --browsers Chrome","test:esm:debug":"npm run test:esm -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","devDependencies":{"@peculiar/webcrypto":"^1.4.0","@types/atob":"^2.1.2","@types/btoa":"^1.2.3","@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^15.6.0","@types/text-encoding":"0.0.36","atob":"^2.1.2","btoa":"^1.2.1","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-vite":"^1.0.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","text-encoding":"^0.7.0","ts-loader":"^9.2.1","ts-mocha":"^10.0.0","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.10.3","webpack":"^5.37.1"},"_id":"brotli-wasm@2.0.1","gitHead":"7fba9ab4b52582f1183a92c0b03bfc6dbd987333","_nodeVersion":"20.8.0","_npmVersion":"10.1.0","dist":{"integrity":"sha512-+3USgYsC7bzb5yU0/p2HnnynZl0ak0E6uoIm4UW4Aby/8s8HFCq6NCfrrf1E9c3O8OCSzq3oYO1tUVqIi61Nww==","shasum":"2b3f4dc3db0c3e60d2635c055e6bac4ddf4bd3f5","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-2.0.1.tgz","fileCount":20,"unpackedSize":4238439,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCkiYO5HJEGKM0MlYiS6QNW4LUWmbEAN9aOJKpXr6u6vgIhAPnP02R1Xx+YD/7TAFowZZT+AXurTRCjpeLhaqINXoCq"}]},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_2.0.1_1696937266632_0.794354773067278"},"_hasShrinkwrap":false},"3.0.0":{"name":"brotli-wasm","version":"3.0.0","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","types":"./index.d.ts","main":"./index.node.js","browser":"./index.browser.js","exports":{".":{"types":"./index.d.ts","import":"./index.web.js","browser":"./index.browser.js","require":"./index.node.js","default":"./index.web.js"}},"sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:esm && npm run test:webpack","test:node":"ts-mocha -p test/tsconfig.json 'test/**/*.spec.ts'","test:webpack":"karma start ./karma-webpack.conf.js","test:esm":"karma start ./karma-esm.conf.js","test:webpack:debug":"npm run test:webpack -- --single-run=false --browsers Chrome","test:esm:debug":"npm run test:esm -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","engines":{"node":">=v18.0.0"},"devDependencies":{"@peculiar/webcrypto":"^1.4.0","@types/atob":"^2.1.2","@types/btoa":"^1.2.3","@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^20.12.7","@types/text-encoding":"0.0.36","atob":"^2.1.2","btoa":"^1.2.1","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-vite":"^1.0.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","text-encoding":"^0.7.0","ts-loader":"^9.2.1","ts-mocha":"^10.0.0","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.10.3","webpack":"^5.37.1"},"_id":"brotli-wasm@3.0.0","gitHead":"0842adcc6aef4bfab5c7e7542265e221f53a8aa5","_nodeVersion":"20.11.1","_npmVersion":"10.2.4","dist":{"integrity":"sha512-YSBb8MwxqMt7QVjf0vZME6DCT3NfxfhAjo30e+qW/yUPVT15KqHRVqZTyECgtixNnu7bn3qw/PL2+cHX04NOJA==","shasum":"0488211b4f37483ba754a6880d07bba4ffd8f405","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-3.0.0.tgz","fileCount":20,"unpackedSize":3247152,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIF6GTRmuO/riI2JDAZa541fa3Oy/zLWOK/cUrvVBjQGtAiEA5uC6nJ8U4p8gsJ5Bm2JM/Yi8yNY/ABDDwb15Eu2tJL4="}]},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_3.0.0_1713454901482_0.5288966678508815"},"_hasShrinkwrap":false},"3.0.1":{"name":"brotli-wasm","version":"3.0.1","description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","types":"./index.d.ts","main":"./index.node.js","browser":"./index.browser.js","exports":{".":{"types":"./index.d.ts","import":"./index.web.js","browser":"./index.browser.js","require":"./index.node.js","default":"./index.web.js"}},"sideEffects":false,"scripts":{"build":"node ./build.js","pretest":"npm run build","test":"npm run test:node && npm run test:esm && npm run test:webpack","test:node":"ts-mocha -p test/tsconfig.json 'test/**/*.spec.ts'","test:webpack":"karma start ./karma-webpack.conf.js","test:esm":"karma start ./karma-esm.conf.js","test:webpack:debug":"npm run test:webpack -- --single-run=false --browsers Chrome","test:esm:debug":"npm run test:esm -- --single-run=false --browsers Chrome"},"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"keywords":["brotli","wasm","compression","decompression"],"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"license":"Apache-2.0","bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"homepage":"https://github.com/httptoolkit/brotli-wasm#readme","engines":{"node":">=v18.0.0"},"devDependencies":{"@peculiar/webcrypto":"^1.4.0","@types/atob":"^2.1.2","@types/btoa":"^1.2.3","@types/chai":"^4.2.18","@types/mocha":"^8.2.2","@types/node":"^20.12.7","@types/text-encoding":"0.0.36","atob":"^2.1.2","btoa":"^1.2.1","buffer":"^6.0.3","chai":"^4.3.4","karma":"^6.3.2","karma-chai":"^0.1.0","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-sourcemap-loader":"^0.3.8","karma-spec-reporter":"0.0.32","karma-typescript":"^5.5.1","karma-vite":"^1.0.1","karma-webpack":"^5.0.0","mocha":"^8.4.0","shelljs":"^0.8.4","text-encoding":"^0.7.0","ts-loader":"^9.2.1","ts-mocha":"^10.0.0","ts-node":"^9.1.1","typescript":"^4.2.4","wasm-pack":"^0.10.3","webpack":"^5.37.1"},"_id":"brotli-wasm@3.0.1","gitHead":"9321f44f3df559b564fe08ce625bb51d70ac9ddc","_nodeVersion":"20.11.1","_npmVersion":"10.2.4","dist":{"integrity":"sha512-U3K72/JAi3jITpdhZBqzSUq+DUY697tLxOuFXB+FpAE/Ug+5C3VZrv4uA674EUZHxNAuQ9wETXNqQkxZD6oL4A==","shasum":"eefe20f7368fef20d53314cffeaa44733dc2b259","tarball":"https://registry.npmjs.org/brotli-wasm/-/brotli-wasm-3.0.1.tgz","fileCount":20,"unpackedSize":3248275,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCsZBWL0qmWiHmtI+WvCU9xVE6ScVIOGXrYwWpvQpR0eQIgWfa1hS6CnE0FtwBWaItvXZ2s2HaIPRbhTiFV0wIUPu0="}]},"_npmUser":{"name":"pimterry","email":"pimterry@gmail.com"},"directories":{},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/brotli-wasm_3.0.1_1717432256932_0.6799376394184808"},"_hasShrinkwrap":false}},"time":{"created":"2021-05-24T13:18:09.744Z","1.0.0":"2021-05-24T13:18:09.944Z","modified":"2024-06-03T16:30:57.326Z","1.1.0":"2021-07-19T14:58:21.811Z","1.1.1":"2022-04-28T11:41:03.328Z","1.2.0":"2022-05-12T18:04:57.695Z","1.3.0":"2022-08-11T16:16:30.859Z","1.3.1":"2022-10-26T11:02:59.420Z","2.0.0":"2023-07-12T16:26:24.629Z","2.0.1":"2023-10-10T11:27:46.911Z","3.0.0":"2024-04-18T15:41:41.699Z","3.0.1":"2024-06-03T16:30:57.142Z"},"maintainers":[{"name":"pimterry","email":"pimterry@gmail.com"}],"description":"A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm","homepage":"https://github.com/httptoolkit/brotli-wasm#readme","keywords":["brotli","wasm","compression","decompression"],"repository":{"type":"git","url":"git+ssh://git@github.com/httptoolkit/brotli-wasm.git"},"author":{"name":"Tim Perry","email":"tim@httptoolkit.tech"},"bugs":{"url":"https://github.com/httptoolkit/brotli-wasm/issues"},"license":"Apache-2.0","readme":"# brotli-wasm [![Build Status](https://github.com/httptoolkit/brotli-wasm/workflows/CI/badge.svg)](https://github.com/httptoolkit/brotli-wasm/actions) [![Available on NPM](https://img.shields.io/npm/v/brotli-wasm.svg)](https://npmjs.com/package/brotli-wasm)\n\n> _Part of [HTTP Toolkit](https://httptoolkit.tech): powerful tools for building, testing & debugging HTTP(S)_\n\n**A reliable compressor and decompressor for Brotli, supporting node & browsers via wasm**\n\nBrotli is available in modern Node (12+) but not older Node or browsers. With this package, you can immediately use it everywhere.\n\nThis package contains a tiny wrapper around the compress & decompress API of the Rust [Brotli crate](https://crates.io/crates/brotli), compiled to wasm with just enough setup to make it easily usable from JavaScript.\n\nThis is battle-tested, in production use in both node & browsers as part of [HTTP Toolkit](https://httptoolkit.tech/), and includes automated build with node & browser tests to make sure.\n\n## Getting started\n\n```\nnpm install brotli-wasm\n```\n\nYou should be able to import this directly into Node, as normal, or in a browser using any bundler that supports ES modules & webassembly (e.g. Webpack v4 or v5, Vite, Rollup, and most others).\n\nFor each target (node.js, commonjs bundlers & ESM bundlers) this module exports a different WASM file & setup, with a slightly different entrypoint. These entrypoints all expose a consistent default-export API, in addition to some other exports that may vary (e.g. Node exposes the brotli methods synchronously, while browsers always require an `await` due to WASM limitations).\n\nIn all builds (after waiting for the exported promise in browsers) the module exposes two core methods:\n\n* `compress(Buffer, [options])` - compresses a buffer using Brotli, returning the compressed buffer. An optional options object can be provided. The only currently supported option is `quality`: a number between 1 and 11.\n* `decompress(Buffer)` - decompresses a buffer using Brotli, returning the original raw data.\n\nFor advanced use data-streaming use cases, `CompressStream` and `DecompressStream` classes for streaming compression are also available. See [the tests](https://github.com/httptoolkit/brotli-wasm/blob/main/test/brotli.spec.ts) for example usage.\n\n### Usage\n\nIf you want to support node & browsers with the same code, you can use the `await` browser-compatible form with the default export everywhere.\n\n#### In node.js:\n\n```javascript\nconst brotli = require('brotli-wasm');\n\nconst compressedData = brotli.compress(Buffer.from('some input'));\nconst decompressedData = brotli.decompress(compressedData);\n\nconsole.log(Buffer.from(decompressedData).toString('utf8')); // Prints 'some input'\n```\n\n#### In browsers:\n\n```javascript\nimport brotliPromise from 'brotli-wasm'; // Import the default export\n\nconst brotli = await brotliPromise; // Import is async in browsers due to wasm requirements!\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n\nconst input = 'some input';\n\nconst uncompressedData = textEncoder.encode(input);\nconst compressedData = brotli.compress(uncompressedData);\nconst decompressedData = brotli.decompress(compressedData);\n\nconsole.log(textDecoder.decode(decompressedData)); // Prints 'some input'\n```\n\nYou can also load it from a CDN like so:\n```javascript\nconst brotli = await import(\"https://unpkg.com/brotli-wasm@3.0.0/index.web.js?module\").then(m => m.default);\n```\n\nThe package itself has no runtime dependencies, although if you prefer using `Buffer` over using `TextEncoder/TextDecoder` you may want a [browser Buffer polyfill](https://www.npmjs.com/package/browserify-zlib).\n\n##### Using an importmap\n\nIf you've installed `brotli-wasm` as an NPM package, you can load it from your `node_modules` subfolder:\n\n```html\n<!-- index.html -->\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head></head>\n    <body>\n        <script type=\"importmap\">\n            {\n                \"imports\": {\n                    \"brotli-wasm\": \"/node_modules/brotli-wasm/index.web.js\"\n                }\n            }\n        </script>\n        <script type=\"module\" src=\"/main.js\"></script>\n    </body>\n</html>\n```\n\n```javascript\n// main.js\nimport brotliPromise from 'brotli-wasm';\nconst brotli = await brotliPromise;\n\nconst input = 'some input';\nconst uncompressedData = new TextEncoder().encode(input);\nconst compressedData = brotli.compress(uncompressedData);\nconst decompressedData = brotli.decompress(compressedData);\nconsole.log(new TextDecoder().decode(decompressedData)); // Prints 'some input'\n```\n\n#### In browser with streams:\n\n```javascript\nimport brotliPromise from 'brotli-wasm'; // Import the default export\n\nconst brotli = await brotliPromise; // Import is async in browsers due to wasm requirements!\n\nconst input = 'some input';\n\n// Get a stream for your input:\nconst inputStream = new ReadableStream({\n    start(controller) {\n        controller.enqueue(input);\n        controller.close();\n    }\n});\n\n// Convert the streaming data to Uint8Arrays, if necessary:\nconst textEncoderStream = new TextEncoderStream();\n\n// You can use whatever stream chunking size you like here, depending on your use case:\nconst OUTPUT_SIZE = 100;\n\n// Create a stream to incrementally compress the data as it streams:\nconst compressStream = new brotli.CompressStream();\nconst compressionStream = new TransformStream({\n    transform(chunk, controller) {\n        let resultCode;\n        let inputOffset = 0;\n\n        // Compress this chunk, producing up to OUTPUT_SIZE output bytes at a time, until the\n        // entire input has been compressed.\n\n        do {\n            const input = chunk.slice(inputOffset);\n            const result = compressStream.compress(input, OUTPUT_SIZE);\n            controller.enqueue(result.buf);\n            resultCode = result.code;\n            inputOffset += result.input_offset;\n        } while (resultCode === brotli.BrotliStreamResultCode.NeedsMoreOutput);\n        if (resultCode !== brotli.BrotliStreamResultCode.NeedsMoreInput) {\n            controller.error(`Brotli compression failed when transforming with code ${resultCode}`);\n        }\n    },\n    flush(controller) {\n        // Once the chunks are finished, flush any remaining data (again in repeated fixed-output\n        // chunks) to finish the stream:\n        let resultCode;\n        do {\n            const result = compressStream.compress(undefined, OUTPUT_SIZE);\n            controller.enqueue(result.buf);\n            resultCode = result.code;\n        } while (resultCode === brotli.BrotliStreamResultCode.NeedsMoreOutput)\n        if (resultCode !== brotli.BrotliStreamResultCode.ResultSuccess) {\n            controller.error(`Brotli compression failed when flushing with code ${resultCode}`);\n        }\n        controller.terminate();\n    }\n});\n\nconst decompressStream = new brotli.DecompressStream();\nconst decompressionStream = new TransformStream({\n    transform(chunk, controller) {\n        let resultCode;\n        let inputOffset = 0;\n\n        // Decompress this chunk, producing up to OUTPUT_SIZE output bytes at a time, until the\n        // entire input has been decompressed.\n\n        do {\n            const input = chunk.slice(inputOffset);\n            const result = decompressStream.decompress(input, OUTPUT_SIZE);\n            controller.enqueue(result.buf);\n            resultCode = result.code;\n            inputOffset += result.input_offset;\n        } while (resultCode === brotli.BrotliStreamResultCode.NeedsMoreOutput);\n        if (\n            resultCode !== brotli.BrotliStreamResultCode.NeedsMoreInput &&\n            resultCode !== brotli.BrotliStreamResultCode.ResultSuccess\n        ) {\n            controller.error(`Brotli decompression failed with code ${resultCode}`)\n        }\n    },\n    flush(controller) {\n        controller.terminate();\n    }\n});\n\nconst textDecoderStream = new TextDecoderStream();\n\nlet output = '';\nconst outputStream = new WritableStream({\n    write(chunk) {\n        output += chunk;\n    }\n});\n\nawait inputStream\n    .pipeThrough(textEncoderStream)\n    .pipeThrough(compressionStream)\n    .pipeThrough(decompressionStream)\n    .pipeThrough(textDecoderStream)\n    .pipeTo(outputStream);\nconsole.log(output); // Prints 'some input'\n```\n\nNote that `TransformStream` has become available in all browsers as of mid-2022: https://caniuse.com/mdn-api_transformstream. It's also been available in Node.js (experimentally) since v16.5.0.\n\nThis is a simplified demo example - you may well want to tweak the specific stream buffer sizes for compression/decompression to your use case, to reuse buffers, or explore further optimizations if you're interested in these streaming use cases.\n\n## Alternatives\n\nThere's a few other packages that do similar things, but I found they were all unusable and/or unmaintained:\n\n* [brotli-dec-wasm](https://www.npmjs.com/package/brotli-dec-wasm) - decompressor only, compiled from Rust just like this package, actively maintained, but no compressor available (by design). **If you only need decompression, this package is a good choice**.\n* [Brotli.js](https://www.npmjs.com/package/brotli) - hand-written JS decompressor that seems to work OK for most cases, but it crashes for some edge cases and the emscripten build of the compressor doesn't work in browsers at all. Last updated in 2017.\n* [wasm-brotli](https://www.npmjs.com/package/wasm-brotli) - Compiled from Rust like this package, includes decompressor & compressor, but requires a custom async wrapper for Webpack v4 usage and isn't usable at all in Webpack v5. Last updated in 2019.\n","readmeFilename":"README.md"}